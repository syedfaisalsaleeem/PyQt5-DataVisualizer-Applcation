# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'change_type.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_TypeWindow(object):
    
    # create a constructor in to set data from the previous window we need 
    def __init__(self,current=None,column_name=None,meta_data=None):
        super().__init__()
        # current data type of the field
        self.current = current
        # column name of the field
        self.column_name = column_name
        #meta data dictionary yo update
        self.meta_data = meta_data

    # sets up the UI we pass Mainwindow widget in the function
    def setupUi(self, MainWindow):
        #set name of the object of main window
        MainWindow.setObjectName("MainWindow")
        # set the size of the main window
        MainWindow.resize(253, 238)
        # creaete a central widget where all the widgets will come
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        #set name
        self.centralwidget.setObjectName("centralwidget")
        #create a label widget
        self.label = QtWidgets.QLabel(self.centralwidget)
        # place the label in the postion with x y axes and hight width
        self.label.setGeometry(QtCore.QRect(80, 50, 101, 20))
        # create a font object
        font = QtGui.QFont()
        # set the font size
        font.setPixelSize(15)
        # set the font in the label 
        self.label.setFont(font)
        # set the object name of the label
        self.label.setObjectName("label")
        # create a dropdown it is named as comoboox
        self.comboBox1 = QtWidgets.QComboBox(self.centralwidget)
        # set the poistion of combobox 
        self.comboBox1.setGeometry(QtCore.QRect(80, 100, 91, 22))
        #set the obejct name of combox
        self.comboBox1.setObjectName("comboBox")
        # if current is not none then set the current value which we set in the constructor
        if self.current != None:
            # add item in the combo box
            self.comboBox1.addItem(str(self.current))
            # set the current text to be shown 
            self.comboBox1.setCurrentText(self.current)
        # create a button widget
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        # set the position of the widget
        self.pushButton.setGeometry(QtCore.QRect(90, 170, 75, 31))
        # set the object name 
        self.pushButton.setObjectName("pushButton")
        # set the event when button is pushed to execute the function
        self.pushButton.clicked.connect(lambda:self.change_data_type(MainWindow))
        #set main window centeral widget 
        MainWindow.setCentralWidget(self.centralwidget)
        # create a widget of the status bar
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        # set the object name
        self.statusbar.setObjectName("statusbar")
        # set status bar in the mmain window
        MainWindow.setStatusBar(self.statusbar)
        # call retransalatre UI
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)


    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        # set the title of the window
        MainWindow.setWindowTitle(_translate("MainWindow", "Change DataType"))
        # set the title of column name
        self.label.setText(_translate("MainWindow", self.column_name))
        # set the button title
        self.pushButton.setText(_translate("MainWindow", "Change"))

    def change_data_type(self,main_window):
        ''' 
            This function is responsible to detect change in the 
            datatype and save it into meta data
        '''
        #get the value from dropdown
        data_type = str(self.comboBox1.currentText())
        #set the value of column with data type
        self.meta_data[self.column_name]['datatype'] = data_type
        # close the window
        main_window.close()
        

    def set_dropdown_options(self):
        ''' 
            This function is responsible for filling up the dropdown
        '''
        # select the choices
        choices = ['NUMBER','DATE','CHARACTER']
        # remove the current choice
        choices.remove(self.current)
        #fill the dopdown with choices
        for c in choices:
            self.comboBox1.addItem(c)

if __name__ == "__main__":
    import sys
    # intialized app in the with Qapplication
    app = QtWidgets.QApplication(sys.argv)
    # create a main window
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_TypeWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
